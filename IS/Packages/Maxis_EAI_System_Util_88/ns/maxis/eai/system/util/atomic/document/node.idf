<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="encodeutf8">true</value>
  <value name="shared">cHVibGljIHN0YXRpYyBJRGF0YSBtYW5hZ2VOdWxsRmllbGRzaW5Eb2MoSURhdGEgaW5wdXQsIGJv
b2xlYW4gc2V0QmxhbmtJZk51bGwsIGJvb2xlYW4gaWdub3JlQmxhbmspIHsKCUlEYXRhIG91dHB1
dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCUlEYXRhIGludGVybWVkaWF0ZU91dHB1dCA9IG51
bGw7CglJRGF0YUN1cnNvciBpbnB1dEN1cnNvciA9IG51bGwsIG91dHB1dEN1cnNvciA9IG51bGw7
CglvdXRwdXRDdXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7CglPYmplY3QgY2hpbGQgPSBudWxs
OwoJU3RyaW5nIGNoaWxkU3RyaW5nOwoJTGlzdDxJRGF0YT4gY2hpbGRJRGF0YUxpc3QgPSBudWxs
LCBpbnRlcm1lZGlhdGVPdXRwdXRMaXN0ID0gbnVsbDsKCWlmIChpbnB1dCAhPSBudWxsKSB7CgkJ
aW5wdXRDdXJzb3IgPSBpbnB1dC5nZXRDdXJzb3IoKTsKCQl3aGlsZSAoaW5wdXRDdXJzb3IubmV4
dCgpKSB7CgkJCWNoaWxkID0gaW5wdXRDdXJzb3IuZ2V0VmFsdWUoKTsKCQkJaWYgKGNoaWxkICE9
IG51bGwpIHsKCQkJCWlmIChjaGlsZCBpbnN0YW5jZW9mIFN0cmluZykgewoJCQkJCWNoaWxkU3Ry
aW5nID0gSURhdGFVdGlsLmdldFN0cmluZyhpbnB1dEN1cnNvciwgaW5wdXRDdXJzb3IuZ2V0S2V5
KCkpOwoJCQkJCWlmIChjaGlsZFN0cmluZyA9PSBudWxsICYmIHNldEJsYW5rSWZOdWxsKSB7CgkJ
CQkJCUlEYXRhVXRpbC5wdXQob3V0cHV0Q3Vyc29yLCBpbnB1dEN1cnNvci5nZXRLZXkoKSwgIiIp
OwoJCQkJCX0gZWxzZSBpZiAoKGNoaWxkU3RyaW5nICE9ICIiKSB8fCAoY2hpbGRTdHJpbmcgPT0g
IiIgJiYgaWdub3JlQmxhbmspKSB7CgkJCQkJCUlEYXRhVXRpbC5wdXQob3V0cHV0Q3Vyc29yLCBp
bnB1dEN1cnNvci5nZXRLZXkoKSwgY2hpbGRTdHJpbmcpOwoJCQkJCX0KCQkJCX0gZWxzZSBpZiAo
Y2hpbGQgaW5zdGFuY2VvZiBJRGF0YSkgewoJCQkJCWludGVybWVkaWF0ZU91dHB1dCA9IElEYXRh
RmFjdG9yeS5jcmVhdGUoKTsKCQkJCQlpbnRlcm1lZGlhdGVPdXRwdXQgPSBtYW5hZ2VOdWxsRmll
bGRzaW5Eb2MoKElEYXRhKSBjaGlsZCwgc2V0QmxhbmtJZk51bGwsIGlnbm9yZUJsYW5rKTsKCQkJ
CQlpZiAoaW50ZXJtZWRpYXRlT3V0cHV0LmdldEN1cnNvcigpLmZpcnN0KCkpIHsKCQkJCQkJSURh
dGFVdGlsLnB1dChvdXRwdXRDdXJzb3IsIGlucHV0Q3Vyc29yLmdldEtleSgpLCBpbnRlcm1lZGlh
dGVPdXRwdXQpOwoJCQkJCX0KCQkJCQlpbnRlcm1lZGlhdGVPdXRwdXQgPSBudWxsOwoJCQkJfSBl
bHNlIGlmIChjaGlsZCBpbnN0YW5jZW9mIElEYXRhW10pIHsKCQkJCQljaGlsZElEYXRhTGlzdCA9
IEFycmF5cy5hc0xpc3QoKChJRGF0YVtdKSBjaGlsZCkpOwoJCQkJCWludGVybWVkaWF0ZU91dHB1
dExpc3QgPSBuZXcgQXJyYXlMaXN0PElEYXRhPigpOwoJCQkJCWZvciAoSURhdGEgY2hpbGRJRGF0
YSA6IGNoaWxkSURhdGFMaXN0KSB7CgkJCQkJCWludGVybWVkaWF0ZU91dHB1dCA9IElEYXRhRmFj
dG9yeS5jcmVhdGUoKTsKCQkJCQkJaW50ZXJtZWRpYXRlT3V0cHV0ID0gbWFuYWdlTnVsbEZpZWxk
c2luRG9jKGNoaWxkSURhdGEsIHNldEJsYW5rSWZOdWxsLCBpZ25vcmVCbGFuayk7CgkJCQkJCWlm
IChpbnRlcm1lZGlhdGVPdXRwdXQuZ2V0Q3Vyc29yKCkuZmlyc3QoKSkgewoJCQkJCQkJaW50ZXJt
ZWRpYXRlT3V0cHV0TGlzdC5hZGQoaW50ZXJtZWRpYXRlT3V0cHV0KTsKCQkJCQkJfQoJCQkJCQlp
bnRlcm1lZGlhdGVPdXRwdXQgPSBudWxsOwoJCQkJCX0KCQkJCQlJRGF0YVV0aWwucHV0KG91dHB1
dEN1cnNvciwgaW5wdXRDdXJzb3IuZ2V0S2V5KCksCgkJCQkJCQlpbnRlcm1lZGlhdGVPdXRwdXRM
aXN0LnRvQXJyYXkobmV3IElEYXRhW2ludGVybWVkaWF0ZU91dHB1dExpc3Quc2l6ZSgpXSkpOwoJ
CQkJfSBlbHNlIHsKCQkJCQlJRGF0YVV0aWwucHV0KG91dHB1dEN1cnNvciwgaW5wdXRDdXJzb3Iu
Z2V0S2V5KCksIGNoaWxkKTsKCQkJCX0KCQkJfQoJCX0KCX0KCXJldHVybiBvdXRwdXQ7Cn0KCnBy
aXZhdGUgc3RhdGljIHZvaWQgcmVtb3ZlRW1wdHlTdHJpbmcoSURhdGFDdXJzb3IgaW5wdXRDdXIs
IElEYXRhQ3Vyc29yIG91dHB1dEN1cil7Cgl3aGlsZShpbnB1dEN1ci5oYXNNb3JlRGF0YSgpKXsJ
CgkJaW5wdXRDdXIubmV4dCgpOwoJCVN0cmluZyBrZXkgPSBpbnB1dEN1ci5nZXRLZXkoKTsKCQlP
YmplY3Qgb2JqMCA9IGlucHV0Q3VyLmdldFZhbHVlKCk7CgkJaWYob2JqMCBpbnN0YW5jZW9mIElE
YXRhKXsKCQkJSURhdGEgdGVtcElEYXRhID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJCQlJRGF0
YUN1cnNvciB0ZW1wSURhdGFDdXIgPSB0ZW1wSURhdGEuZ2V0Q3Vyc29yKCk7CgkJCQoJCQlJRGF0
YUN1cnNvciB0ZW1wQ3VyID0gKChJRGF0YSlvYmowKS5nZXRDdXJzb3IoKTsKCQkJcmVtb3ZlRW1w
dHlTdHJpbmcodGVtcEN1ciwgdGVtcElEYXRhQ3VyKTsKCQkJdGVtcEN1ci5kZXN0cm95KCk7IAoJ
CQl0ZW1wSURhdGFDdXIuZGVzdHJveSgpOwoJCQlJRGF0YVV0aWwucHV0KG91dHB1dEN1ciwga2V5
LCB0ZW1wSURhdGEpOyAKCQl9ZWxzZSBpZihvYmowIGluc3RhbmNlb2YgU3RyaW5nKXsKCQkJU3Ry
aW5nIHZhbCA9IElEYXRhVXRpbC5nZXRTdHJpbmcoaW5wdXRDdXIsIGtleSkudHJpbSgpOwoJCQlp
ZighdmFsLmVxdWFscygiIikpewoJCQkJSURhdGFVdGlsLnB1dChvdXRwdXRDdXIsIGtleSwgdmFs
KTsJCQkJCgkJCX0KCQl9ZWxzZSBpZihvYmowIGluc3RhbmNlb2YgSURhdGFbXSl7CgkJCUlEYXRh
W10gaWRhdGFBcnIgPSAoSURhdGFbXSlvYmowOwoJCQlJRGF0YVtdIG91dHB1dCA9IG5ldyBJRGF0
YVtpZGF0YUFyci5sZW5ndGhdOwoJCQlmb3IoaW50IGk9MDsgaTxpZGF0YUFyci5sZW5ndGg7IGkr
Kyl7CgkJCQlvdXRwdXRbaV0gPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJCQlJRGF0YUN1cnNv
ciB0ZW1wSURhdGFDdXIgPSBvdXRwdXRbaV0uZ2V0Q3Vyc29yKCk7CgkJCQoJCQkJSURhdGFDdXJz
b3IgdGVtcEN1ciA9IGlkYXRhQXJyW2ldLmdldEN1cnNvcigpOwoJCQkJcmVtb3ZlRW1wdHlTdHJp
bmcodGVtcEN1ciwgdGVtcElEYXRhQ3VyKTsKCQkJCXRlbXBDdXIuZGVzdHJveSgpOyAKCQkJCXRl
bXBJRGF0YUN1ci5kZXN0cm95KCk7CgkJCX0KCQkJSURhdGFVdGlsLnB1dChvdXRwdXRDdXIsIGtl
eSwgb3V0cHV0KTsgCgkJfWVsc2V7CgkJCUlEYXRhVXRpbC5wdXQob3V0cHV0Q3VyLCBrZXksIG9i
ajApOwoJCX0KCX0KfQ==</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>java.util.ArrayList</value>
    <value>java.util.Arrays</value>
    <value>java.util.List</value>
  </array>
</Values>
